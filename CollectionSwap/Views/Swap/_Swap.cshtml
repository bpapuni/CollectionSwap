@model CollectionSwap.Models.SwapViewModel
@using Newtonsoft.Json;
@{
    var id = Model.Id;
    var userName = Model.UserName;
    var itemList = Model.ItemList;
    var imagePath = Model.ImagePath;
    var senderItemIds = Model.SenderItemIds;
    var receiverItemIds = Model.ReceiverItemIds;
    var swapSize = Model.SwapSize;
    var swapType = Model.Type;
}

<div class="swap-container">
    <div class="swap-container-header">
        <div class="swap-profile">
            <div class="swap-portrait">Pic</div>
            <div>
                <span class="header">Swap with @userName</span><br />
                @if (Model.Rating == -1)
                {
                    <span class="new">New</span>
                }
                <span class="swap-rating">
                    @for (int i = 0; i < Math.Floor(Model.Rating); i++)
                    {
                        <i class="fa fa-star"></i>
                    }
                    @if (Model.Rating % 1 == 0.5)
                    {
                        <i class="fa fa-star-half"></i>
                    }
                </span>
            </div>
        </div>
        <div class="swap-info">
            Swap <br /> @swapSize for
            <span class="swap-size">@swapSize</span>
        </div>
    </div>
    <div class="swap-container-body">
        <div>
            <span class="header">Your Selection</span>
            @*<span class="header">Select @Model.SwapSize items you wish to swap for</span>
            <span class="header d-none">@Model.UserName will be offered to select 2 your items</span>*@
            <button class="swap-your-items-button" onclick="ToggleSwapItems(this)"><i class="fa-solid fa-file"></i><text>Your Items</text></button>
        </div>
        
        <div class="swap-items">
            @for (var i = 0; i < swapSize; i++)
            {
                <div class="swap-item placeholder" onclick="ClearItem(this)">
                    @*<img data-item-id="@itemId" src="@Url.Content(@imagePath + '/' + @itemList[itemId])" />*@
                    <img src="@Url.Content(@imagePath + '/' + @itemList[0])" />
                </div>
            }
        </div>
        
        <span class="header">Select @swapSize of @userName's items</span>
        <div class="swap-items">
            @foreach (var itemId in receiverItemIds)
            {
                <div class="swap-item swap-request-item" onclick="SelectItem(this)">
                    @*<img data-item-id="@itemId" src="@Url.Content(@imagePath + '/' + @itemList[itemId])" />*@
                    <img data-item-id="@itemId" src="@Url.Content(@imagePath + '/' + @itemList[itemId])" />
                </div>
            }
        </div>
        <div class="swap-items your-items d-none">
            @foreach (var itemId in senderItemIds)
            {
                <div class="swap-item">
                    <img src="@Url.Content(@imagePath + '/' + @itemList[itemId])" />
                </div>
            }
        </div>
    </div>
</div>
<button class="submit-button" onclick="offerSwap(this, '@swapType', @id)" disabled>Items Selected (0/@Model.SwapSize)</button>
@*<button class="submit-button" onclick="declineSwap(this, '@swapType', @id)">Decline Swap</button>*@