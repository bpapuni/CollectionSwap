@model CollectionSwap.Models.Swap
@using Newtonsoft.Json;
@{
    var currentUser = User.Identity.Name;
    var senderUserName = Model.Sender.UserName;
    var receiverUserName = Model.Receiver.UserName;
    var senderItemList = JsonConvert.DeserializeObject<List<int>>(Model.SenderItemIdsJSON);
    var receiverItemList = JsonConvert.DeserializeObject<List<int>>(Model.ReceiverItemIdsJSON);
    var collectionId = Model.CollectionId;
    var imagePath = $"~/Collections/{collectionId}/";
    var fileNames = JsonConvert.DeserializeObject<List<string>>(Model.Collection.ItemListJSON);
    var status = Model.Status;
}

@{
    if (currentUser == receiverUserName)
    {
        var tempItemList = senderItemList;
        senderItemList = receiverItemList;
        receiverItemList = tempItemList;
    }
}

<div class="past-swap-container">
    <div class="past-swap-container-sent">
        @switch (status)
        {
            case "offered":
                <span>You're Sending (offer pending)</span>
                break;
            case "accepted":
                <span>You're Sending</span>
                break;
            case "confirmed":
                <span>You Sent</span>
                break;
            default:
                break;
        }
        @foreach (var item in senderItemList)
        {
            var imageSrc = @Url.Content($"{imagePath}/{fileNames[item]}");
            <img src="@imageSrc" alt="@item" />
        }
    </div>
    <div class="past-swap-icon">
        <i class="fa fa-exchange fa-rotate-90"></i>
    </div>
    <div class="past-swap-container-received">
        @switch (status)
        {
            case "offered":
                <span>You're Receiving<br />(offer pending)</span>
                break;
            case "accepted":
                <span>You're Receiving</span>
                break;
            case "confirmed":
                <span>You Received</span>
                break;
            default:
                break;
        }
        @foreach (var item in receiverItemList)
        {
            var imageSrc = @Url.Content($"{imagePath}/{fileNames[item]}");
            <img src="@imageSrc" alt="@item" />
        }
    </div>
</div>