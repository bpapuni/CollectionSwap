@model CollectionSwap.Models.AccountViewModel
@{
    ViewBag.Title = "Login";
}

<main class="register-container" aria-labelledby="title">
    <div class="register-container-left">
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
        {
            <h4>Register your account</h4>
            @Html.AntiForgeryToken()

            @Html.ValidationMessageFor(m => m.RegisterViewModel.Username, "", new { @class = "text-danger" })
            @Html.ValidationMessage("UsernameTaken", new { @class = "text-danger" })
            @Html.ValidationMessageFor(m => m.RegisterViewModel.Email, "", new { @class = "text-danger" })
            @Html.ValidationMessage("EmailTaken", new { @class = "text-danger" })
            @Html.ValidationMessageFor(m => m.RegisterViewModel.Password, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(m => m.RegisterViewModel.ConfirmPassword, "", new { @class = "text-danger" })

            <div class="register-container-column">
                @Html.LabelFor(m => m.RegisterViewModel.Username, new { @class = "col-form-label" })
                @Html.TextBoxFor(m => m.RegisterViewModel.Username, new { @class = "form-control" })
            </div>
            <div class="register-container-column">
                @Html.LabelFor(m => m.RegisterViewModel.Email, new { @class = "col-form-label" })
                @Html.TextBoxFor(m => m.RegisterViewModel.Email, new { @class = "form-control" })
            </div>
            <div class="register-container-column">
                @Html.LabelFor(m => m.RegisterViewModel.Password, new { @class = "col-form-label" })
                @Html.PasswordFor(m => m.RegisterViewModel.Password, new { @class = "form-control" })
            </div>
            <div class="register-container-column">
                @Html.LabelFor(m => m.RegisterViewModel.ConfirmPassword, new { @class = "col-form-label" })
                @Html.PasswordFor(m => m.RegisterViewModel.ConfirmPassword, new { @class = "form-control" })
            </div>
            <div class="register-container-column">
                <input type="submit" value="Register" class="btn btn-outline-dark" />
            </div>
        }
    </div>
    <div class="register-container-right">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h4>Login</h4>
            @Html.ValidationMessage("LoginError", new { @class = "text-danger" })
            @Html.ValidationMessageFor(m => m.LoginViewModel.Email, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(m => m.LoginViewModel.Password, "", new { @class = "text-danger" })

            <div class="register-container-column">
                @Html.LabelFor(m => m.LoginViewModel.Email, new { @class = "col-form-label" })
                @Html.TextBoxFor(m => m.LoginViewModel.Email, new { @class = "form-control" })
            </div>
            <div class="register-container-column">
                @Html.LabelFor(m => m.LoginViewModel.Password, new { @class = "col-form-label" })
                @Html.PasswordFor(m => m.LoginViewModel.Password, new { @class = "form-control" })
            </div>
            @*<div class="register-container-column">
                @Html.CheckBoxFor(m => m.LoginViewModel.RememberMe)
                @Html.LabelFor(m => m.LoginViewModel.RememberMe)
            </div>*@
            <br />
            <div class="register-container-column">
                <input type="submit" value="Log in" class="btn btn-outline-dark" />
            </div>
            @* Enable this once you have account confirmation enabled for password reset functionality
            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>*@
        }
    </div>
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(".register-container-left, .register-container-right").on("click", swapZIndex);

        function swapZIndex() {
            const box1 = $(".register-container-left")[0];
            const box2 = $(".register-container-right")[0];

            const zIndex1 = box1.style.zIndex;
            box1.style.zIndex = box2.style.zIndex;
            box2.style.zIndex = zIndex1;
        }
    </script>
}
