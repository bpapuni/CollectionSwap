@model CollectionSwap.Models.AccountViewModel
@{
    ViewBag.Title = "Login";
}

<div id="register-container">
    @*<section class="login-prompt exclamation squiggle d-none">*@
    <section class="login-prompt exclamation squiggle" style="display: none">
        <h2>Have an Account?</h2>
        <button class="submit-button" onclick="SwitchRegisterForms(this)">Login</button>
    </section>

    <section class="login exclamation squiggle">
        @using (Html.BeginForm("Login", "Account", FormMethod.Post))
        {
            <h2>Welcome <em class="underline">Back</em></h2>
            @Html.AntiForgeryToken()

            @*@Html.ValidationMessage("LoginError", new { @class = "text-danger" })
                @Html.ValidationMessageFor(m => m.LoginViewModel.Email, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(m => m.LoginViewModel.Password, "", new { @class = "text-danger" })*@

            <div class="form-group">
                @Html.LabelFor(m => m.LoginViewModel.Email)
                @Html.TextBoxFor(m => m.LoginViewModel.Email)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LoginViewModel.Password)
                @Html.PasswordFor(m => m.LoginViewModel.Password)
            </div>
            @*<div class="form-group">
                    @Html.CheckBoxFor(m => m.LoginViewModel.RememberMe)
                    @Html.LabelFor(m => m.LoginViewModel.RememberMe)
                </div>*@
            <button class="submit-button" type="submit">Login</button>
            @* Enable this once you have account confirmation enabled for password reset functionality
                <p>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                </p>*@
        }
    </section>

    <section class="register-prompt exclamation squiggle">
        <h2>New Here?</h2>
        <button class="submit-button" onclick="SwitchRegisterForms(this)">Create Free Account</button>
    </section>

    @*<section class="register squiggle exclamation d-none">*@
    <section class="register squiggle exclamation" style="display: none">
        @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
        {
            <h2>Create <em class="underline">Account</em></h2>
            @Html.AntiForgeryToken()

            @*@Html.ValidationMessageFor(m => m.RegisterViewModel.Username, "", new { @class = "text-danger" })
                @Html.ValidationMessage("UsernameTaken", new { @class = "text-danger" })
                @Html.ValidationMessageFor(m => m.RegisterViewModel.Email, "", new { @class = "text-danger" })
                @Html.ValidationMessage("EmailTaken", new { @class = "text-danger" })
                @Html.ValidationMessageFor(m => m.RegisterViewModel.Password, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(m => m.RegisterViewModel.ConfirmPassword, "", new { @class = "text-danger" })*@

            <div class="form-group">
                @Html.LabelFor(m => m.RegisterViewModel.Username)
                @Html.TextBoxFor(m => m.RegisterViewModel.Username)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RegisterViewModel.Email)
                @Html.TextBoxFor(m => m.RegisterViewModel.Email)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RegisterViewModel.Password)
                @Html.PasswordFor(m => m.RegisterViewModel.Password)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RegisterViewModel.ConfirmPassword)
                @Html.PasswordFor(m => m.RegisterViewModel.ConfirmPassword)
            </div>
            <button class="submit-button" type="submit">Create Account</button>
        }
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function SwitchRegisterForms(e) {
            let button = $(e);
            let hiddenElements = $("section:hidden");
            let showingElements = $("section:visible");

            showingElements.fadeOut(100, () => {
                hiddenElements.fadeIn(100);
            });
        }
    </script>
}