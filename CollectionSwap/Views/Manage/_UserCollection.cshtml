@model CollectionSwap.Models.UserCollectionModel
@using CollectionSwap.Models
@using Newtonsoft.Json;
@{
    List<string> items = JsonConvert.DeserializeObject<List<string>>(Model.Collection.ItemListJSON);
    int[] userItems = JsonConvert.DeserializeObject<int[]>(Model.UserCollection.ItemCountJSON);
    string statusMessage = ViewBag.Status;
}

<div class="row">
    <button class="scroll-row-button" onclick="ScrollRowBack(this)"><i class="fa fa-angle-left"></i></button>

    <span class="header">
        Update Your @Model.UserCollection.Name Collection
    </span>
</div>

<section class="column">
    <span>
        <strong>Completed a swap?</strong> <br />
        Tick the 'Items Received' checkbox in Swap History to automatically update this collection with your new items.
    </span>

    <br />

    <div>
        <strong>No longer collecting?</strong> <input data-user-collection-id="@Model.UserCollection.Id" class="charity-checkbox" type="checkbox" checked="@Model.UserCollection.Charity" /> <br />
        If you'd like to donate your items to another collector bla bla bla
    </div>

    <br />
    @using (Html.BeginForm("ChangeUserCollectionName", "Manage", null, FormMethod.Post))
    {
        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.UserCollection.Id)
            @Html.HiddenFor(model => model.UserCollection.UserId)

            @Html.LabelFor(model => model.UserCollection.Name)
            @Html.TextBoxFor(model => model.UserCollection.Name, new { @class = "" })
            @Html.ValidationMessageFor(model => model.UserCollection.Name, "", new { @class = "text-danger" })
            <input class="submit-button" type="submit" value="Update Name" />
        </div>
    }
    <br />
    <div id="collection-items" class="row gap-2" style="">
        @foreach (var item in items)
        {
            var imagePath = $"~/Collections/{Model.UserCollection.CollectionId}";
            var itemId = items.IndexOf(item);

            <div class="column align-items-center">
                <div class="item-container @(userItems[itemId] < 1 ? "item-not-owned" : "")">
                    <img class="item" src="@Url.Content(imagePath)/@item" />
                </div>
                <div class="item-quantity column align-items-center">
                    Quantity:
                    @using (Html.BeginForm("UpdateItemCount", "Manage", null, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("index", itemId)
                        @Html.Hidden("userId", Model.UserCollection.UserId)
                        @Html.Hidden("ucId", Model.UserCollection.Id)

                        <div class="row align-items-center">
                            <button class="counter counter-minus" type="submit"><i class="fa fa-minus-circle"></i></button>
                            <input type="number" id="@itemId" name="quantity" min="0" max="99" value="@userItems[itemId]" />
                            <button class="counter counter-add" type="submit"><i class="fa fa-plus-circle"></i></button>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</section>