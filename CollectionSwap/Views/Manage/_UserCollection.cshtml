@model CollectionSwap.Models.UserCollection
@using Newtonsoft.Json;
@{
    List<string> items = JsonConvert.DeserializeObject<List<string>>(Model.Collection.ItemListJSON);
    int[] userItems = JsonConvert.DeserializeObject<int[]>(Model.ItemCountJSON);
    string statusMessage = ViewBag.Status;
    var sponsor = Model.Collection.Sponsor;
}

<div class="row">
    <button class="scroll-row-button" onclick="ScrollRowBack(this)"><i class="fa fa-angle-left"></i></button>

    <span class="header">
        Update Your @Model.Name Collection
    </span>
</div>

<section>
    <div class="collection-items-container">
        @if (!String.IsNullOrEmpty(statusMessage))
        {
            <div class="status-message">@statusMessage</div>
        }
        <span>
            <strong>Completed a swap?</strong> <br />
            Tick the 'Items Received' checkbox in Swap History to automatically update this collection with your new items.
        </span>

        <br />

        <div>
            <strong>No longer collecting?</strong> <input data-user-collection-id="@Model.Id" class="charity-checkbox" type="checkbox" checked="@Model.Charity" /> <br />
            If you'd like to donate your items to another collector bla bla bla
        </div>

        <br />
        @using (Html.BeginForm("ChangeUserCollectionName", "Manage", null, FormMethod.Post))
        {
            <div class="form-group">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.UserId)

                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new { @class = "" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                <input class="submit-button" type="submit" value="Update Name" />
            </div>
        }
        <br />
        <div id="collection-items" class="row gap-2" style="">
            @foreach (var item in items)
            {
                var imagePath = $"~/Collections/{Model.CollectionId}";
                var itemId = items.IndexOf(item);

                <div class="column align-items-center">
                    <div class="item-container @(userItems[itemId] < 1 ? "item-not-owned" : "")">
                        <img class="item" src="@Url.Content(imagePath)/@item" />
                    </div>
                    <div class="item-quantity column align-items-center">
                        Quantity:
                        @using (Html.BeginForm("UpdateItemCount", "Manage", null, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("index", itemId)
                            @Html.Hidden("userId", Model.UserId)
                            @Html.Hidden("ucId", Model.Id)

                            <div class="row align-items-center">
                                <button class="counter counter-minus" type="submit"><i class="fa fa-minus-circle"></i></button>
                                <input type="number" id="@itemId" name="quantity" min="0" max="99" value="@userItems[itemId]" />
                                <button class="counter counter-add" type="submit"><i class="fa fa-plus-circle"></i></button>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    @if (sponsor != null)
    {
        <div class="user-collection-sponsor-container">
            <div>
                <div class="sponsor-logo">
                    <img src="@(sponsor.Image != null ? $"/Sponsors/{Model.CollectionId}/{sponsor.Image}" : "/Content/images/doodles/3.png")" alt="Sponsor Logo" />
                </div>
                <hr />
                @if (sponsor.Statement != null)
                {
                    <div class="sponsor-statement" role="textbox">
                        @Html.Raw(System.Net.WebUtility.HtmlDecode(sponsor.Statement))
                    </div>
                }
            </div>
        </div>
    }
</section>