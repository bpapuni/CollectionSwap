@model CollectionSwap.Models.SwapHistoryViewModel
@using Microsoft.AspNet.Identity
@{
    string statusMessage = ViewBag.Status;
    string errorMessage = ViewBag.Error;
    var userId = User.Identity.GetUserId();
    var displayableSwaps = Model.Swaps;
}

<div class="scroll-snap-row">
    <div class="status-container">
        @if (!String.IsNullOrEmpty(statusMessage))
        {
            <div class="status-message">@statusMessage</div>
        }
        else if (!String.IsNullOrEmpty(errorMessage))
        {
            <div class="status-message error">@errorMessage</div>
        }
    </div>
    <div class="page-navigation">
        <span class="header d-none"></span>
    </div>
    <div data-nav="Swap History" id="history-container">
        <span class="header">Swap History</span>

        <section class="column">
            <div class="swap-history-filters">
                <span data-status="all" class="selected">All</span>
                <span data-status="requested">Requested</span>
                <span data-status="accepted">Accepted</span>
                <span data-status="confirmed">Confirmed</span>
                <span data-status="completed">Completed</span>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Collection Name</th>
                        <th>User</th>
                        <th>Progress</th>
                        <th>Sent</th>
                        <th>Received</th>
                        <th>Start Date</th>
                        <th>Status</th>
                    </tr>
                </thead>

                <tbody>
                    @if (displayableSwaps.Count() == 0)
                    {
                        <tr class="no-swaps">
                            <td colspan="7" style="text-align: center">
                                No swaps to display<br />
                                @*<a href="/Manage/YourCollections">Add a collection</a> to get started.
                                Click <a href="/Manage/FindSwaps">here</a> to start searching for swaps.*@
                            </td>
                        </tr>
                    }

                    @foreach (var swap in displayableSwaps)
                    {
                        var swapStatus = swap.SenderRequestedItems == "[]" || swap.ReceiverRequestedItems == "[]" ? $"charity-{swap.Status}" : swap.Status;
                        <tr>
                            <td onclick="OpenOffer(@swap.Id)">@swap.Collection.Name</td>
                            @if (swap.SenderId == userId)
                            {
                                <td><a class="load-content" data-nav="View Swap" href="/Manage/Member/@swap.Receiver.UserName">@swap.Receiver.UserName</a></td>
                            }
                            else if (swap.ReceiverId == userId)
                            {
                                <td><a class="load-content" data-nav="View Swap" href="/Manage/Member/@swap.Sender.UserName">@swap.Sender.UserName</a></td>
                            }
                            @switch (swapStatus)
                            {
                                case "charity-requested":
                                    if (swap.SenderId == userId)
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="@swap.Receiver.UserName has requested your items.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    else
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="You've requested these items, waiting @swap.Sender.UserName to accept or decline.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    break;
                                case "charity-confirmed":
                                    if (swap.SenderId == userId)
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="You confirmed this swap, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    else if (swap.ReceiverId == userId)
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="@swap.Sender.UserName has accepted your request.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    break;
                                case "charity-completed":
                                    if (swap.SenderId == userId)
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="You requested this swap, waiting for @swap.Receiver.UserName to accept or decline.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    else
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="Swap complete">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    break;
                                case "charity-canceled":
                                    <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="@swap.Receiver.UserName canceled their request.">@Html.Partial("_SwapProgress", swap)</td>
                                    break;
                                case "charity-declined":
                                    <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="@swap.Sender.UserName has donated the items to another user">@Html.Partial("_SwapProgress", swap)</td>
                                    break;
                                case "requested":
                                    if (swap.SenderId == userId)
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="You requested this swap, waiting for @swap.Receiver.UserName to accept or decline.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    else
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="This swap has been requested from you, waiting for you to accept or decline.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    break;
                                case "accepted":
                                    if (swap.SenderId == userId)
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="The swap has been accepted, waiting for you to confirm.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    else
                                    {
                                        <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="You've accepted this swap, waiting for @swap.Sender.UserName to confirm.">@Html.Partial("_SwapProgress", swap)</td>
                                    }
                                    break;
                                case "confirmed":
                                    if (swap.SenderId == userId)
                                    {
                                        if (swap.ReceiverConfirmSent)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="@swap.Receiver.UserName has sent your items, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", swap)</td>
                                        }
                                        else
                                        {
                                            <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="You confirmed this swap, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", swap)</td>
                                        }
                                    }
                                    else
                                    {
                                        if (swap.SenderConfirmSent)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="@swap.Sender.UserName has sent your items, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", swap)</td>
                                        }
                                        else
                                        {
                                            <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="@swap.Sender.UserName confirmed this swap, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", swap)</td>
                                        }
                                    }
                                    break;
                                case "completed":
                                    <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="Swap complete">@Html.Partial("_SwapProgress", swap)</td>
                                    break;
                                case "canceled":
                                case "declined":
                                    <td onclick="OpenOffer(@swap.Id)" class="swap-status" title="Swap @swapStatus">@Html.Partial("_SwapProgress", swap)</td>
                                    break;
                                default:
                                    break;
                            }
                            @if (userId == swap.SenderId)
                            {
                                <td>
                                    <input data-swap-id="@swap.Id" data-type="sent" class="swap-confirm" type="checkbox" checked="@swap.SenderConfirmSent" @Html.Raw(swap.Status == "canceled" || swap.Status == "declined" ? "disabled" : "") />
                                </td>
                                <td>
                                    <input data-swap-id="@swap.Id" data-type="received" class="swap-confirm" type="checkbox" checked="@(swap.SenderConfirmReceived || swap.ReceiverRequestedItems == "[]")" @Html.Raw(swap.ReceiverRequestedItems == "[]" || swap.Status == "canceled" || swap.Status == "declined" ? "disabled" : "") />
                                </td>
                            }
                            else if (userId == swap.ReceiverId)
                            {
                                <td>
                                    <input data-swap-id="@swap.Id" data-type="sent" class="swap-confirm" type="checkbox" checked="@swap.ReceiverConfirmSent" @Html.Raw(swap.ReceiverRequestedItems == "[]" || swap.Status == "canceled" || swap.Status == "declined" ? "disabled" : "") />
                                </td>
                                <td>
                                    <input data-swap-id="@swap.Id" data-type="received" class="swap-confirm" type="checkbox" checked="@swap.ReceiverConfirmReceived" @Html.Raw(swap.Status == "canceled" || swap.Status == "declined" ? "disabled" : "") />
                                </td>
                            }
                            <td onclick="OpenOffer(@swap.Id)">
                                @swap.StartDate.ToLocalTime().ToString("dd/MM/yyyy")
                            </td>
                            @{
                                var isCharity = swap.ReceiverRequestedItems == "[]";
                                var hasSentItems = userId == swap.SenderId ? swap.SenderConfirmSent : swap.ReceiverConfirmSent;
                                var hasReceivedItems = userId == swap.SenderId ? swap.SenderConfirmReceived : swap.ReceiverConfirmReceived;
                                var hasSentFeedback = userId == swap.SenderId ? isCharity || swap.SenderFeedback != null : swap.ReceiverFeedback != null;
                                var hasExpired = (DateTime.Now - swap.StartDate).Days > 14;
                                switch (swapStatus)
                                {
                                    case "charity-requested":
                                        <td onclick="OpenOffer(@swap.Id)">
                                            @if (swap.SenderId == userId)
                                            {
                                                <span class="status-pending">Request Pending</span>
                                            }
                                            else
                                            {
                                                <span class="status-pending">Waiting for @swap.Sender.UserName</span>
                                            }
                                        </td>
                                        break;
                                    case "canceled":
                                    case "charity-canceled":
                                        <td onclick="OpenOffer(@swap.Id)">
                                            <span class="status-declined">Canceled</span>
                                        </td>
                                        break;
                                    case "charity-declined":
                                        <td onclick="OpenOffer(@swap.Id)">
                                            <span class="status-declined">Declined</span>
                                        </td>
                                        break;
                                    case "charity-confirmed":
                                        if (hasSentFeedback)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-complete">Complete</span>
                                            </td>
                                        }
                                        else if (hasSentItems && hasReceivedItems)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-pending">Awaiting Feedback</span>
                                            </td>
                                        }
                                        else if (hasSentItems)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-pending">Waiting to receive items</span>
                                            </td>
                                        }
                                        else
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-pending">Needs Mailing</span>
                                            </td>
                                        }
                                        break;
                                    case "requested":
                                        <td onclick="OpenOffer(@swap.Id)">
                                            @if (swap.SenderId == userId)
                                            {
                                                <span class="status-pending">Waiting for @swap.Receiver.UserName</span>
                                            }
                                            else
                                            {
                                                <span class="status-pending">Request Pending</span>
                                            }
                                        </td>
                                        break;
                                    case "accepted":
                                        <td onclick="OpenOffer(@swap.Id)">
                                            @if (swap.SenderId == userId)
                                            {
                                                <span class="status-pending">Pending Confirmation</span>
                                            }
                                            else
                                            {
                                                <span class="status-pending">Waiting for @swap.Sender.UserName</span>
                                            }
                                        </td>
                                        break;
                                    case "confirmed":
                                        if (hasSentFeedback)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-complete">Complete</span>
                                            </td>
                                        }
                                        else if ((hasSentItems && hasReceivedItems) || hasExpired)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-pending">Awaiting Feedback</span>
                                            </td>
                                        }
                                        else if (hasSentItems)
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-pending">Waiting to receive items</span>
                                            </td>
                                        }
                                        else
                                        {
                                            <td onclick="OpenOffer(@swap.Id)">
                                                <span class="status-pending">Needs Mailing</span>
                                            </td>
                                        }
                                        break;
                                    case "declined":
                                        <td onclick="OpenOffer(@swap.Id)">
                                            <span class="status-declined">Declined</span>
                                        </td>
                                        break;
                                    default:
                                        <td onclick="OpenOffer(@swap.Id)">
                                            <span class="status-complete">Complete</span>
                                        </td>
                                        break;
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </section>
    </div>
    <div data-nav="View Swap" id="offer-container" class="d-none">
        @if (Model.Offer != null)
        {
            @Html.Partial("_Offer", Model.Offer)
        }
    </div>
    <div data-nav="Member Profile" id="profile-container" class="d-none">
        @if (ViewBag.ViewProfile == true)
        {
            @Html.Partial("_Profile")
        }
    </div>
</div>
