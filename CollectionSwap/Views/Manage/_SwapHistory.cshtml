@model CollectionSwap.Models.SwapHistoryViewModel
@using Microsoft.AspNet.Identity
@{
    string statusMessage = ViewBag.Status;
}

<div class="scroll-snap-row">
    <div id="history-container">
        @if (!String.IsNullOrEmpty(statusMessage))
        {
            <div class="status-message">@statusMessage</div>
        }
        <span class="header">Swap History</span>

        <section>
            <table>
                <thead>
                    <tr>
                        <th>Collection Type</th>
                        <th>User</th>
                        <th onclick="SortByStatus()">Status <i class="fa-solid fa-sort"></i></th>
                        <th>Items Sent</th>
                        <th>Items Received</th>
                        <th>Next Action</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var Swap in Model.Swaps)
                    {
                        <tr>
                            <td>@Swap.Collection.Name</td>
                            @if (Swap.SenderId == User.Identity.GetUserId())
                            {
                                <td>@Swap.Receiver.UserName</td>
                            }
                            else
                            {
                                <td>@Swap.Sender.UserName</td>
                            }
                            @switch (@Swap.Status)
                            {
                                case "offered":
                                    if (Swap.SenderId == User.Identity.GetUserId())
                                    {
                                        <td class="swap-status" title="You offered this swap, waiting for @Swap.Receiver.UserName to accept or decline.">@Html.Partial("_SwapProgress", Swap)</td>
                                    }
                                    else
                                    {
                                        <td class="swap-status" title="You've been offered this swap, waiting for you to accept or decline.">@Html.Partial("_SwapProgress", Swap)</td>
                                    }
                                    break;
                                case "accepted":
                                    if (Swap.SenderId == User.Identity.GetUserId())
                                    {
                                        <td class="swap-status" title="The swap has been accepted, waiting for you to confirm.">@Html.Partial("_SwapProgress", Swap)</td>
                                    }
                                    else
                                    {
                                        <td class="swap-status" title="You've accepted this swap, waiting for @Swap.Sender.UserName to confirm.">@Html.Partial("_SwapProgress", Swap)</td>
                                    }
                                    break;
                                case "confirmed":
                                    if (Swap.SenderId == User.Identity.GetUserId())
                                    {
                                        if (Swap.ReceiverConfirmSent)
                                        {
                                            <td class="swap-status" title="@Swap.Receiver.UserName has sent your items, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", Swap)</td>
                                        }
                                        else
                                        {
                                            <td class="swap-status" title="You confirmed this swap, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", Swap)</td>
                                        }
                                    }
                                    else
                                    {
                                        if (Swap.SenderConfirmSent)
                                        {
                                            <td class="swap-status" title="@Swap.Sender.UserName has sent your items, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", Swap)</td>
                                        }
                                        else
                                        {
                                            <td class="swap-status" title="@Swap.Sender.UserName confirmed this swap, please follow the provided mailing instructions.">@Html.Partial("_SwapProgress", Swap)</td>
                                        }
                                    }
                                    break;
                                case "completed":
                                    <td class="swap-status" title="Swap complete">@Html.Partial("_SwapProgress", Swap)</td>
                                    break;
                                default:
                                    break;
                            }
                            @if (Swap.SenderId == User.Identity.GetUserId())
                            {
                                <td>
                                    <input data-swap-id="@Swap.Id" data-type="sent" class="swap-confirm" type="checkbox" checked="@Swap.SenderConfirmSent" />
                                </td>
                                <td>
                                    <input data-swap-id="@Swap.Id" data-type="received" class="swap-confirm" type="checkbox" checked="@Swap.SenderConfirmReceived" />
                                </td>
                            }
                            else
                            {
                                <td>
                                    <input data-swap-id="@Swap.Id" data-type="sent" class="swap-confirm" type="checkbox" checked="@Swap.ReceiverConfirmSent" />
                                </td>
                                <td>
                                    <input data-swap-id="@Swap.Id" data-type="received" class="swap-confirm" type="checkbox" checked="@Swap.ReceiverConfirmReceived" />
                                </td>
                            }

                            @switch (@Swap.Status)
                            {
                                case "offered":
                                    <td>
                                        @if (Swap.SenderId == User.Identity.GetUserId())
                                        {
                                            <span>Waiting for @Swap.Receiver.UserName</span><br />
                                            <a href="/Manage/SwapHistory/@Swap.Id" class="swap-offer">(View Offer)</a>
                                        }
                                        else
                                        {
                                            <a href="/Manage/SwapHistory/@Swap.Id" class="swap-offer">Review Offer</a>
                                        }
                                    </td>
                                    break;
                                case "accepted":
                                    <td>
                                        @if (Swap.SenderId == User.Identity.GetUserId())
                                        {
                                            <a href="/Manage/SwapHistory/@Swap.Id" class="swap-offer">Confirm Swap</a>
                                        }
                                        else
                                        {
                                            <span>Waiting for @Swap.Sender.UserName</span><br />
                                            <a href="/Manage/SwapHistory/@Swap.Id" class="swap-offer">(View Offer)</a>
                                        }
                                    </td>
                                    break;
                                case "confirmed":
                                    var hasPlacedFeedback = Swap.Sender.Id == User.Identity.GetUserId() ? Swap.SenderFeedbackSent : Swap.ReceiverFeedbackSent;
                                    var hasSentItems = Swap.Sender.Id == User.Identity.GetUserId() ? Swap.SenderConfirmSent : Swap.ReceiverConfirmSent;
                                    var hasReceivedItems = Swap.Sender.Id == User.Identity.GetUserId() ? Swap.SenderConfirmReceived : Swap.ReceiverConfirmReceived;
                                    if (hasPlacedFeedback)
                                    {
                                        <td>
                                            <span>Complete</span><br />
                                            <a href="/Manage/SwapHistory/@Swap.Id" class="swap-offer">(View Swap)</a>
                                        </td>
                                    }
                                    else if (hasSentItems && hasReceivedItems)
                                    {
                                        <td><a href="/Manage/SwapHistory/@Swap.Id">Provide Feedback</a></td>
                                    }
                                    else if (hasSentItems)
                                    {
                                        <td>
                                            <span>Waiting to receive items</span><br />
                                            <a href="/Manage/SwapHistory/@Swap.Id">(View Swap)</a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td><a href="/Manage/SwapHistory/@Swap.Id">View Mailing Instructions</a></td>
                                    }
                                    break;
                                default:
                                    <td>
                                        <span>Complete</span><br />
                                        <a href="/Manage/SwapHistory/@Swap.Id" class="swap-offer">(View Swap)</a>
                                    </td>
                                    break;
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </section>

        <div class="swap-history-doodle">
            <img src="~/Content/images/doodles/6.png" />
        </div>
    </div>

    <div id="feedback-container" class="d-none">
        @if (Model.Feedback != null)
        {
            @Html.Partial("_Feedback", Model.Feedback)
        }
    </div>

    <div id="offer-container" class="d-none">
        @if (Model.Offer != null)
        {
            @Html.Partial("_Offer", Model.Offer)
        }
    </div>
</div>