@model CollectionSwap.Models.IndexViewModel
<div id="account-container" class="secondary-container">
    <div class="secondary-container-header">
        <p>Account Settings</p>
    </div>

    <div class="secondary-container-row">
        <div class="paint-blotches"></div>

        @using (Html.BeginForm("ChangeEmail", "Manage", FormMethod.Post, new { @class = "account-form" }))
        {
            @Html.AntiForgeryToken()
            <div class="account-form-row">
                <div class="account-form-column">
                    @Html.LabelFor(m => m.ChangeEmail.OldEmail)
                    @Html.TextBoxFor(m => m.ChangeEmail.OldEmail)
                    @Html.ValidationMessageFor(m => m.ChangeEmail.OldEmail)
                </div>
            </div>
            <div class="account-form-row">
                <div class="account-form-column">
                    @Html.LabelFor(m => m.ChangeEmail.NewEmail)
                    @Html.TextBoxFor(m => m.ChangeEmail.NewEmail)
                    @Html.ValidationMessageFor(m => m.ChangeEmail.NewEmail)
                </div>
            </div>
            <div class="account-form-row">
                <div class="account-form-column">
                    @Html.LabelFor(m => m.ChangeEmail.ConfirmEmail)
                    @Html.TextBoxFor(m => m.ChangeEmail.ConfirmEmail)
                    @Html.ValidationMessageFor(m => m.ChangeEmail.ConfirmEmail)
                </div>
            </div>
            <div class="account-form-row">
                <div class="account-form-column">
                    <span class="success-message">@ViewBag.ChangeEmailStatus</span>
                    <input type="submit" value="Update Email" />
                </div>
            </div>
        }

        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "account-form" }))
        {
            @Html.AntiForgeryToken()
            <div class="account-form-row">
                <div class="account-form-column">
                    @Html.LabelFor(m => m.ChangePassword.OldPassword)
                    @Html.PasswordFor(m => m.ChangePassword.OldPassword, new { @class = "" })
                    @Html.ValidationMessageFor(m => m.ChangePassword.OldPassword)
                </div>
            </div>
            <div class="account-form-row">
                <div class="account-form-column">
                    @Html.LabelFor(m => m.ChangePassword.NewPassword)
                    @Html.PasswordFor(m => m.ChangePassword.NewPassword, new { @class = "" })
                    @Html.ValidationMessageFor(m => m.ChangePassword.NewPassword)
                </div>
            </div>
            <div class="account-form-row">
                <div class="account-form-column">
                    @Html.LabelFor(m => m.ChangePassword.ConfirmPassword)
                    @Html.PasswordFor(m => m.ChangePassword.ConfirmPassword, new { @class = "" })
                    @Html.ValidationMessageFor(m => m.ChangePassword.ConfirmPassword)
                </div>
            </div>
            <div class="account-form-row">
                <div class="account-form-column">
                    @if (ViewData.ModelState.ContainsKey("ChangePassword"))
                    {
                        <ul>
                            @foreach (var error in ViewData.ModelState["ChangePassword"].Errors)
                            {
                                <li class="text-danger">
                                    @error.ErrorMessage
                                </li>
                            }
                        </ul>
                    }
                    <span class="success-message">@ViewBag.ChangePasswordStatus</span>
                    <input type="submit" value="Update Password" />
                </div>
            </div>
        }
    </div>

    <br />
    <div class="secondary-container-header">
        <p>Mailing Address</p>
    </div>

    @*@using (Html.BeginForm("ChangeAddess", "Manage", FormMethod.Post, new { @class = "account-form" }))
    {
        @Html.AntiForgeryToken()
        <div class="account-form-row">
            <div class="account-form-column">
                @Html.LabelFor(m => m.ChangePassword.OldPassword)
                @Html.PasswordFor(m => m.ChangePassword.OldPassword, new { @class = "" })
                @Html.ValidationMessageFor(m => m.ChangePassword.OldPassword)
            </div>
        </div>
        <div class="account-form-row">
            <div class="account-form-column">
                @Html.LabelFor(m => m.ChangePassword.NewPassword)
                @Html.PasswordFor(m => m.ChangePassword.NewPassword, new { @class = "" })
                @Html.ValidationMessageFor(m => m.ChangePassword.NewPassword)
            </div>
        </div>
        <div class="account-form-row">
            <div class="account-form-column">
                @Html.LabelFor(m => m.ChangePassword.ConfirmPassword)
                @Html.PasswordFor(m => m.ChangePassword.ConfirmPassword, new { @class = "" })
                @Html.ValidationMessageFor(m => m.ChangePassword.ConfirmPassword)
            </div>
        </div>
        <div class="account-form-row">
            <div class="account-form-column">
                <input type="submit" value="Update Password" />
            </div>
        </div>
    }*@

    @*<form class="account-form">
        <div class="account-form-row">
            <div class="account-form-column">
                <span>
                    <strong>Keep it Safe:</strong>
                    Consider using a business address or P.O. box for mailing collectibles, ensuring your home address remains private.
                </span>
            </div>
        </div>
        <div class="account-form-row">
            <div class="account-form-column">
                <label>Full Name</label>
                <input type="text" />
            </div>
            <div class="account-form-column">
                <label>Company Name (optional)</label>
                <input type="text" />
            </div>
        </div>
        <div class="account-form-row">
            <div class="account-form-column">
                <label>Address Line 1</label>
                <input type="text" />
            </div>
            <div class="account-form-column">
                <label>Address Line 2</label>
                <input type="text" />
            </div>
        </div>
        <div class="account-form-row">
            <div class="account-form-column">
                <label>Post Code</label>
                <input type="text" />
            </div>
            <div class="account-form-column">
                <label>City</label>
                <input type="text" />
            </div>
        </div>
        <div class="account-form-row">
            <div class="account-form-column">
                <input type="submit" value="Update Address" />
            </div>
        </div>
    </form>*@
</div>