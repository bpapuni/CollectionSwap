@model CollectionSwap.Models.FeedbackViewModel
@using Microsoft.AspNet.Identity
@using Newtonsoft.Json
@{
    string statusMessage = ViewBag.Status;

    var userId = User.Identity.GetUserId();
    var sender = Model.Swap.Sender;
    var receiver = Model.Swap.Receiver;

    var comments = Model.Feedback != null ? JsonConvert.DeserializeObject<List<string>>(Model.Feedback.Comments) : null;

    var hasPlacedFeedback = sender.Id == userId ? Model.Swap.SenderFeedbackSent : Model.Swap.ReceiverFeedbackSent;
    var hasSentItems = sender.Id == userId ? Model.Swap.SenderConfirmSent : Model.Swap.ReceiverConfirmSent;
    var hasReceivedItems = sender.Id == userId ? Model.Swap.SenderConfirmReceived : Model.Swap.ReceiverConfirmReceived;

    var heading = hasSentItems && hasReceivedItems && hasPlacedFeedback ? "Completed Swap" : "Swap Feedback";
}

<div class="feedback-module">
    <div>
        <span class="feedback-header">Rate your swap with @(userId == sender.Id ? receiver.UserName : sender.UserName)</span>
        <div class="form-group">
            <div class="star-rating-module">
                @for (int i = 0; i < 5; i++)
                {
                    if (Model.Feedback != null)
                    {
                        if (5 - i <= Model.Feedback.Rating)
                        {
                            <button class="star-button selected"><i class="fa fa-star"></i></button>
                        }
                        else
                        {
                            <button class="star-button disabled"><i class="fa fa-star"></i></button>
                        }
                    }
                    else
                    {
                        <button class="star-button"><i class="fa fa-star"></i></button>
                    }
                }
            </div>
            @Html.ValidationMessageFor(m => m.Feedback.Rating)
        </div>
    </div>

    <div class="feedback-form-container">
        <span class="feedback-header">Select any reasons for this rating that apply</span>
        <div class="feedback-tabs">
        </div>

        @using (Html.BeginForm("PlaceFeedback", "Manage", FormMethod.Post, new { id = "feedback-form" }))
        {
            <div class="feedback-options">
                <ul class="feedback-list">
                    @{

                        List<string> options = new List<string> 
                        {
                            "Swap accepted quickly",
                            "Swap took a long time to be accepted",
                            "Items arrived quickly",
                            "Items took too long to arrive",
                            "Items packaged well",
                            "Items packaged poorly",
                            "Items in good condition",
                            "Items in poor condition",
                            "Generous swapper",
                            "Expected items were missing",
                            "Would gladly swap with again",
                            "Would not swap with again",
                            "User came to my residence",
                        };

                        if (comments != null)
                        {
                            foreach (var option in options)
                            {
                                if (comments.Contains(option))
                                {
                                    <li class="selected">@option</li>
                                }
                                else
                                {

                                    <li>@option</li>
                                }
                            }
                        }
                        else
                        {
                            foreach (var option in options)
                            {
                                <li>@option</li>
                            }
                        }
                    }
                </ul>
            </div>

            if (Model.Feedback != null)
            {
                @Html.HiddenFor(m => m.Feedback.Id)
            }
            @Html.Hidden("Feedback.SwapId", Model.Swap.Id)
            @Html.HiddenFor(m => m.Feedback.Rating)
            @Html.HiddenFor(m => m.Feedback.Comments)
        }
    </div>
</div>

@if (hasPlacedFeedback)
{
    <button class="submit-button" disabled>Feedback Submitted</button>
}
else
{
    <button class="submit-button" onclick="$('#feedback-form').trigger('submit')">Submit Feedback</button>
}