@model CollectionSwap.Models.YourCollectionViewModel
@using CollectionSwap.Models
@using Newtonsoft.Json
@{
    string statusMessage = ViewBag.Status;
}

<div class="scroll-snap-row">
    <div id="your-collections-container">
        @if (!String.IsNullOrEmpty(statusMessage))
        {
            <div class="status-message">@statusMessage</div>
        }
        <span class="header">
            Your Collections
        </span>
        <section>
            @{
                var createCollectionButton = new CollectionButton
                {
                    Id = 0,
                    Name = "Add New Collection",
                    ItemList = new List<string>(),
                };
            }

            <div class="collection-button" onClick="OpenCreateUserCollection(this)" )>
                @Html.Partial("_CollectionButton", createCollectionButton)
            </div>

            @foreach (var userCollection in Model.UserCollections)
            {
                var collection = Model.Collections.Where(c => c.Id == userCollection.CollectionId).FirstOrDefault();
                var deserializedItemListJSON = JsonConvert.DeserializeObject<List<string>>(collection.ItemListJSON);
                var userItemList = JsonConvert.DeserializeObject<List<int>>(userCollection.ItemCountJSON)
                                                .Select((value, index) => new { Value = value, Index = index })
                                                .Where(item => item.Value > 0)
                                                .Select(item => item.Index)
                                                .ToList();
                var duplicates = JsonConvert.DeserializeObject<List<int>>(userCollection.ItemCountJSON)
                                                .Select(num => num > 1 ? num - 1 : 0).ToList()
                                                .Sum();

                var collectionButton = new CollectionButton
                {
                    Id = userCollection.CollectionId,
                    Name = userCollection.Name,
                    Description = userCollection.Collection.Description,
                    ItemList = userItemList.Select(index => deserializedItemListJSON[index]).ToList(),
                    SetSize = deserializedItemListJSON.Count,
                    Duplicates = duplicates
                };
                <div class="column align-items-center gap-1">
                    <a class="collection-button" href=@Url.Content($"/Manage/YourCollections/{userCollection.Id}")>
                        @Html.Partial("_CollectionButton", collectionButton)
                    </a>

                    @using (Html.BeginForm("DeleteUserCollection", "Manage", new { id = @userCollection.Id }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <button class="button-icon button-icon-trash" type="submit" onclick="return confirm('Are you sure you want to delete this set?')"><i class="fa-solid fa-trash"></i></button>
                    }
                </div>
            }
        </section>
    </div>

    <div id="create-user-collection-container" class="d-none">
        @Html.Partial("_CreateUserCollection", Model)
    </div>


    <div id="user-collection-container" class="d-none">
        @if (Model.EditCollection != null)
        {
            @Html.Partial("_UserCollection", Model.EditCollection)
        }
    </div>
</div>