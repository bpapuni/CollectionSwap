@model CollectionSwap.Models.YourCollectionViewModel
@using CollectionSwap.Models
@using Newtonsoft.Json
<div id="your-collections-container" class="secondary-container">
    @{
        var mcViewModel = new ManageCollectionsViewModel
        {
            Collections = Model.Collections
        };
    }
    <div id="create-user-collection-container" @*style="display: none"*@>
        @Html.Partial("_AvailableCollections", mcViewModel)
    </div>
    <div class="secondary-container">
        <div class="secondary-container-header">
            <p>Your Collections</p>
        </div>

        <div class="secondary-container-row">
            <div class="tertiary-container">
                @{
                    var createCollectionButton = new CollectionButton
                    {
                        Id = 0,
                        Name = "Create Collection",
                        ItemList = new List<string>(),
                    };
                }

                @*<a class="collection-button" href="/Manage/YourCollections/#" onClick="$('#create-user-collection-container').slideDown()" )>
            @Html.Partial("_CollectionButton", createCollectionButton)
        </a>*@

                @foreach (var userCollection in Model.UserCollections)
                {
                    var collection = Model.Collections.Where(c => c.Id == userCollection.CollectionId).FirstOrDefault();
                    var deserializedItemListJSON = JsonConvert.DeserializeObject<List<string>>(collection.ItemListJSON);
                    var userItemList = JsonConvert.DeserializeObject<List<int>>(userCollection.ItemCountJSON)
                                                    .Select((value, index) => new { Value = value, Index = index })
                                                    .Where(item => item.Value > 0)
                                                    .Select(item => item.Index)
                                                    .ToList();

                    var collectionButton = new CollectionButton
                    {
                        Id = userCollection.CollectionId,
                        Name = userCollection.Name,
                        ItemList = userItemList.Select(index => deserializedItemListJSON[index]).ToList()
                    };
                    <div class="d-flex flex-column align-items-center">
                        <a class="collection-button" href=@Url.Content($"/Manage/YourCollections/{userCollection.Id}")>
                            @Html.Partial("_CollectionButton", collectionButton)
                        </a>

                        @using (Html.BeginForm("DeleteUserCollection", "Manage", new { id = @userCollection.Id }, FormMethod.Post, new { @class = "mt-3" }))
                        {
                            @Html.AntiForgeryToken()
                            <button class="button-icon button-icon-trash" type="submit" onclick="return confirm('Are you sure you want to delete this set?')"><i class="fa fa-trash"></i></button>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <div id="user-collection-container">
        @if (Model.EditCollection != null)
        {
            @Html.Partial("_UserCollection", Model.EditCollection)
        }
    </div>
</div>